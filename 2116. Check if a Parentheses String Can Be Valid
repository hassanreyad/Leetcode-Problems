class Solution {
public:
    bool canBeValid(string s, string locked) {
        int n=s.length();
        if(n%2==1) return false;
        
        int open =0 ,close = 0, unlock=0;
        for(int i=0;i<n;i++){
            if(locked[i] == '0') unlock++;
            else (s[i]=='(')? open++ : close++;
            
            if((unlock + open) < close) return false;
        }
        
        open =0 ,close = 0, unlock=0;
        for(int i=n-1;i>=0;i--){
            if(locked[i] == '0') unlock++;
            else (s[i]=='(')? open++ : close++;
            
            if((unlock + close)< open) return false;
        }
        
        
        
        return true;
        
    }
};
